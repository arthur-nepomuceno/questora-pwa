import { NextRequest, NextResponse } from 'next/server';
import { admin } from '@/lib/firebase-admin';

const nodemailer = require('nodemailer');

export async function POST(request: NextRequest) {
  try {
    console.log('üîç [API] Iniciando envio de verifica√ß√£o...');
    const { userId, email, name, phone } = await request.json();
    console.log('üìß [API] Dados recebidos:', { userId, email, name, phone });

    // Gerar link de verifica√ß√£o via Firebase Admin SDK
    console.log('üîó [API] Gerando link de verifica√ß√£o...');
    let verificationLink = '';
    
    try {
      verificationLink = await admin.generateEmailVerificationLink(email);
      console.log('‚úÖ [API] Link gerado com sucesso');
    } catch (linkError: any) {
      console.warn('‚ö†Ô∏è [API] Erro ao gerar link (rate limit):', linkError.message);
      console.log('‚ÑπÔ∏è [API] Continuando sem link personalizado...');
      verificationLink = 'Link n√£o dispon√≠vel (rate limit do Firebase)';
    }
    
    // Configurar transporter Nodemailer com SMTP Gmail
    console.log('üìß [API] Configurando Nodemailer...');
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: 'showdomileniooficial@gmail.com',
        pass: process.env.GMAIL_PASSWORD
      }
    });
    console.log('‚úÖ [API] Nodemailer configurado');

    // Template HTML do email para o usu√°rio
    const userHtmlTemplate = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2>Verifica√ß√£o de Email - Show do Mil√™nio</h2>
        <p>Ol√° ${name},</p>
        <p>Obrigado por se cadastrar no Show do Mil√™nio! Para ativar sua conta, clique no link abaixo:</p>
        ${verificationLink.includes('http') ? 
          `<p><a href="${verificationLink}" style="color: #007bff; text-decoration: none; background-color: #f8f9fa; padding: 10px 20px; border-radius: 5px; display: inline-block;">Verificar Email</a></p>` :
          `<p style="color: #666;">Link n√£o dispon√≠vel no momento. Tente novamente mais tarde.</p>`
        }
        <p>Se voc√™ n√£o se cadastrou em nosso site, pode ignorar este email.</p>
        <p style="font-size: 12px; color: #666;">Este link foi gerado automaticamente pelo Firebase.</p>
      </div>
    `;

    // Enviar email para o usu√°rio
    console.log('üì§ [API] Enviando email para o usu√°rio...');
    await transporter.sendMail({
      from: 'showdomileniooficial@gmail.com',
      to: email,
      subject: 'Verifica√ß√£o de Email - Show do Mil√™nio',
      html: userHtmlTemplate
    });
    console.log('‚úÖ [API] Email enviado para o usu√°rio');

    return NextResponse.json({ 
      success: true, 
      message: 'Email de verifica√ß√£o enviado com sucesso' 
    });

  } catch (error: any) {
    console.error('‚ùå [API] Erro ao enviar email de verifica√ß√£o:', error);
    console.error('‚ùå [API] Stack trace:', error.stack);
    return NextResponse.json(
      { success: false, error: 'Erro interno do servidor' },
      { status: 500 }
    );
  }
}
